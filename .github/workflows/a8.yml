name: CI/CD to EC2 (Spring + Expo auto-export)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- Build Expo web export into Spring's static/ ---
      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install RN deps
        working-directory: mobile-temp
        run: npm ci

      # Optional: run RN tests. Remove if you want to skip.
      - name: Test RN (optional)
        working-directory: mobile-temp
        run: npm test -- --ci --passWithNoTests

      - name: Export Expo web directly into Spring static
        working-directory: mobile-temp
        env:
          EXPO_NO_PROMPT: '1'
          EXPO_NO_TELEMETRY: '1'
        run: |
          # ensure static dir exists in the server project
          mkdir -p ../server/src/main/resources/static
          # export the web build straight into Spring static
          npx expo export --platform web --output-dir ../server/src/main/resources/static
          ls -l ../server/src/main/resources/static | head -n 20

      # --- Build Spring Boot JAR with the new static files bundled ---
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build Spring Boot JAR
        working-directory: server
        run: |
          ./mvnw -q -DskipTests package || mvn -q -DskipTests package
          ls -l target

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: server/target/*SNAPSHOT.jar

  deploy-ec2:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./dist

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./dist/*.jar"
          target: "/home/${{ secrets.EC2_USER }}/deploy/"

      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl restart ${{ secrets.SERVICE_NAME }}
            sudo systemctl status  ${{ secrets.SERVICE_NAME }} --no-pager
