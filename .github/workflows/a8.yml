name: CI/CD to EC2 (Spring Boot JAR)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      # Detect the folder that contains pom.xml (first match)
      - name: Locate pom.xml
        id: findpom
        shell: bash
        run: |
          set -e
          hit="$(git ls-files | grep -m1 -E '^.*pom\.xml$' || true)"
          if [ -z "$hit" ]; then
            echo "No pom.xml found in repo. Failing build."
            exit 1
          fi
          dir="$(dirname "$hit")"
          echo "POM_DIR=$dir" | tee -a "$GITHUB_ENV"
          echo "Found pom in: $dir"

      - name: Build Spring Boot JAR
        shell: bash
        run: |
          cd "$POM_DIR"
          # Use mvnw if present, fall back to mvn
          if [ -x "./mvnw" ]; then ./mvnw -q -DskipTests package; else mvn -q -DskipTests package; fi
          ls -l target

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: ${{ env.POM_DIR }}/target/*SNAPSHOT.jar

  deploy-ec2:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./dist

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./dist/*.jar"
          target: "/home/${{ secrets.EC2_USER }}/deploy/"

      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            ls -l /home/${{ secrets.EC2_USER }}/deploy/ || true
            sudo systemctl restart ${{ secrets.SERVICE_NAME }}
            sudo systemctl status  ${{ secrets.SERVICE_NAME }} --no-pager
