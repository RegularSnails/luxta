name: CI/CD to EC2 (Spring + optional Expo export)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- Locate RN app (optional) ---
      - name: Locate RN app
        id: findrn
        shell: bash
        run: |
          set -e
          RN_DIR=""
          while IFS= read -r p; do
            if grep -qE '"expo"|"react-native"' "$p"; then
              RN_DIR="$(dirname "$p")"; break
            fi
          done < <(git ls-files | grep -E '^.*package\.json$')
          echo "RN_DIR=$RN_DIR" | tee -a "$GITHUB_ENV"
          if [ -n "$RN_DIR" ]; then
            echo "Found RN app at: $RN_DIR"
          else
            echo "No RN app found. Will skip RN export."
          fi

      # --- If RN app is present, build and export to Spring static ---
      - name: Set up Node 20
        if: env.RN_DIR != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install RN deps
        if: env.RN_DIR != ''
        working-directory: ${{ env.RN_DIR }}
        run: npm ci

      - name: Export Expo web directly into Spring static
        if: env.RN_DIR != ''
        working-directory: ${{ env.RN_DIR }}
        env:
          EXPO_NO_PROMPT: '1'
          EXPO_NO_TELEMETRY: '1'
        run: |
          # adjust this path if your Spring project is not at server/
          mkdir -p ../server/src/main/resources/static
          npx expo export --platform web --output-dir ../server/src/main/resources/static
          ls -l ../server/src/main/resources/static | head -n 20

      # --- Build Spring Boot JAR (always) ---
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build Spring Boot JAR
        working-directory: server    # change if your Spring project folder is named differently
        run: |
          ./mvnw -q -DskipTests package || mvn -q -DskipTests package
          ls -l target

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: server/target/*SNAPSHOT.jar

  deploy-ec2:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./dist

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./dist/*.jar"
          target: "/home/${{ secrets.EC2_USER }}/deploy/"

      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl restart ${{ secrets.SERVICE_NAME }}
            sudo systemctl status  ${{ secrets.SERVICE_NAME }} --no-pager
